version: "3.8"
services:
  nginx:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: nginx-ssh-container
    ports:
      - "8000:80" # Expose HTTP port (Nginx)
    volumes:
      - ./html:/var/www/html # Mount local html directory to container
      - ./nginx.conf:/etc/nginx/nginx.conf   # Mount Nginx configuration file
    networks:
      - docker-network
    restart: unless-stopped
    depends_on:
      - wordpress
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wpuser
      MYSQL_PASSWORD: myPassR
      MYSQL_ROOT_PASSWORD: password
    ports:
      - 3307:3306 # Changed to avoid conflict with existing MySQL
    volumes:
      - db_data:/var/lib/mysql
    container_name: mysql-container
    networks:
      - docker-network
    # Resource limits for small VM
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    depends_on:
      - db
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "8080:80"
    networks:
      - docker-network
  wordpress:
    image: wordpress:php8.1-fpm  # Use FPM version for nginx
    container_name: wordpress-container
    restart: always
    # Remove external port mapping - nginx will communicate internally
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wpuser
      WORDPRESS_DB_PASSWORD: myPassR
      WORDPRESS_DB_NAME: wordpress
    depends_on:
      - db
    volumes:
      - wordpress:/var/www/html
    networks:
      - docker-network
    # Resource limits for small VM
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

networks:
  docker-network:
    name: docker-network
    driver: bridge
volumes:
  db_data:
  wordpress: